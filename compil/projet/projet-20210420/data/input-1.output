*** begin compilation
*** Push a new environment
*** Put m => integer into STACK(0) environment
*** Put s => string into STACK(0) environment
*** Put main => (args:list<string>) -> void into STACK(0) environment
*** Push a new environment
*** Put args => list<string> into STACK(1) environment
*** Get m from STACK(1) environment <= null
*** Get m from STACK(0) environment <= integer
*** Get s from STACK(1) environment <= null
*** Get s from STACK(0) environment <= string
*** Put j => integer into STACK(1) environment
*** Get m from STACK(1) environment <= null
*** Get m from STACK(0) environment <= integer
*** Get j from STACK(1) environment <= integer
*** Get m from STACK(1) environment <= null
*** Get m from STACK(0) environment <= integer
*** Get m from STACK(1) environment <= null
*** Get m from STACK(0) environment <= integer
*** Get m from STACK(1) environment <= null
*** Get m from STACK(0) environment <= integer
*** Get m from STACK(1) environment <= null
*** Get m from STACK(0) environment <= integer
*** Get m from STACK(1) environment <= null
*** Get m from STACK(0) environment <= integer
*** Get j from STACK(1) environment <= integer
sans else
*** Pop an environment
SEQ [left=SEQ [left=SEQ [left=SEQ [left=SEQ [left=SEQ [left=MOVE [target=MEM [exp=fr.ubordeaux.deptinfo.compilation.lea.intermediate.NAME@692e028d], source=CONST [value=36]], right=MOVE [target=MEM [exp=fr.ubordeaux.deptinfo.compilation.lea.intermediate.NAME@66213a0d], source=fr.ubordeaux.deptinfo.compilation.lea.intermediate.NAME@aa4d8cc]], right=MOVE [target=MEM [exp=fr.ubordeaux.deptinfo.compilation.lea.intermediate.NAME@3cb8c8ce], source=CONST [value=1]]], right=EXPSTM [exp=fr.ubordeaux.deptinfo.compilation.lea.intermediate.CALL@1fde0371]], right=MOVE [target=MEM [exp=fr.ubordeaux.deptinfo.compilation.lea.intermediate.NAME@70c0a3d5], source=BINOP [binop=+, left=CONST [value=5], right=CONST [value=5]]]], right=SEQ [left=LABEL [label=L0], right=SEQ [left=fr.ubordeaux.deptinfo.compilation.lea.intermediate.CJUMP@5c8e67b9, right=SEQ [left=LABEL [label=L1], right=SEQ [left=MOVE [target=MEM [exp=fr.ubordeaux.deptinfo.compilation.lea.intermediate.NAME@260a3a5e], source=BINOP [binop=+, left=MEM [exp=fr.ubordeaux.deptinfo.compilation.lea.intermediate.NAME@49206065], right=CONST [value=5]]], right=SEQ [left=fr.ubordeaux.deptinfo.compilation.lea.intermediate.JUMP@3c0bbc9f, right=LABEL [label=L2]]]]]]], right=SEQ [left=fr.ubordeaux.deptinfo.compilation.lea.intermediate.CJUMP@1317b708, right=SEQ [left=LABEL [label=L3], right=SEQ [left=MOVE [target=MEM [exp=fr.ubordeaux.deptinfo.compilation.lea.intermediate.NAME@6438a7fe], source=CONST [value=21]], right=LABEL [label=L4]]]]]
*** Pop an environment
*** Put main => m:integer X s:string X main:(args:list<string>) -> void into CLASSE environment
*** end compilation
